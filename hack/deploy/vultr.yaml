apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cloud-controller-manager
  labels:
    app: cloud-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cloud-controller-manager
    spec:
      serviceAccountName: cloud-controller-manager
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      # this taint is set by all kubelets running `--cloud-provider=external`
      # so we should tolerate it to schedule the digitalocean ccm
      - key: "node.cloudprovider.kubernetes.io/uninitialized"
        value: "true"
        effect: "NoSchedule"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      # cloud controller manages should be able to run on masters
      - key: "node-role.kubernetes.io/master"
        effect: NoSchedule
      containers:
        - image: appscode/openstack-cloud-controller-manager:softlayer
          imagePullPolicy: Always
          name: ccm
          args:
          - up
          - --cloud-config=/etc/kubernetes/cloud-config
          - --cloud-provider=vultr
          - --v=3
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: k8s
      volumes:
      - name: k8s
        hostPath:
          path: /etc/kubernetes
